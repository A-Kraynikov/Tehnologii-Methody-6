@startuml
title Пратическая работа 3: Template Method
class Algorithm{
template_method()
flagstock()
draw_1()
draw_2()
draw_3()
final()
printer()
}
note right of Algorithm::"template_method()"
self.flagstock()
self.draw_1()
self.draw_2()
self.draw_3()
self.final()
self.printer()
end note

class colors{
painwhite()
painred()
painblue()
painblack()
painyel()
}

class RussianFlag{
z = colors
z.pain
draw_1()
draw_2()
draw_3()
final()
}
class  GermanFlag{
z = colors
z.pain
draw_1()
draw_2()
draw_3()
}

Algorithm <|-- GermanFlag : Немецкий флаг
Algorithm <|-- RussianFlag : Российский флаг

RussianFlag -  GermanFlag 
(RussianFlag, GermanFlag) - colors:Задает цвет

@enduml



@startuml 
title Пратическая работа 3: Strategy 

class Variant{ 
selection() 
} 
class Game{ 
strategy: Variant 
init() 
play() 
} 

class Rock{ 
selection() 
} 
class Paper{ 
selection() 
} 
class Clippers{ 
selection() 
} 
class main{ 
int n 
str vibor 
playtime() 
player1.play(player2) 
} 
note right of main::"playtime()" 
player1 = playtime(vibor) 
player2 = playtime(vibor) 
end note 

Paper --> Variant 
Rock --> Variant 
Clippers --> Variant 
main *--> Variant 
main --Game 

@enduml 
